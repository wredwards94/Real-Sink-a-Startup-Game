import java.util.ArrayList;

public class StartupBust {
    // Declaring and initializing the variables that will be used
    private ArrayList<Startup>startups = new ArrayList<Startup>();
    private GameHelper helper = new GameHelper();
    private int numOfGuesses = 0;

    private void setUpGame(){
        // make three Startup objects and names them
        Startup one = new Startup();
        one.setName("Poniez");
        Startup two = new Startup();
        two.setName("Hacqi");
        Startup three = new Startup();
        three.setName("Cabista");
        startups.add(one);
        startups.add(two);
        startups.add(three);

        // print out the instructions of the game to the user
        System.out.println("Your goal is to sink three Startups.");
        System.out.println("Poniez, Hacqi, Cabista");
        System.out.println("Try to sink them all in the fewest number of guesses");

        // repeat with each Startup in the list
        for(Startup startup : startups){
            // ask the helper for a Startup location
            ArrayList<String>newLocation = helper.placeStartup(3);
            // call the setter method on this Startup to give it a location that was generated by the helper
            startup.setLocationCells(newLocation);
        } // close the for loop
    } // end of setUpGame method

    private void startPlaying(){
        while (!startups.isEmpty()){
            // as long as the Startup list is not empty
            String userGuess = helper.getUserInput("Enter a guess"); // get user input
            // call our own checkUserGuess method
            checkUserGuess(userGuess);
        } // close while loop
        finishGame(); // call our own finishGame method
    } // close startPlaying method
    private void checkUserGuess(String userGuess){
        // find out if there's a hit (and kill) on any Startup
        numOfGuesses++; // increment the number of guesses the user made
        String result = "miss"; // assume it's a miss unless told otherwise

        // repeat with all startups in the list
        for(Startup startupToTest : startups) {
            // ask the Startup to check the user guess, looking for a hit (or kill)
            result = startupToTest.checkYourself(userGuess);

            if(result.equals("hit")){
                break; // get out of loop early, no point in testing the others
            }
            if(result.equals("kill")){
                startups.remove(startupToTest);
                break; // this one's dead, so take it out of the Startups list & exit the loop
            }
        } // close for loop
        System.out.println(result); // print the result for the user
    } // close method
    private void finishGame(){
        // print a message telling the user how they did in the game
        System.out.println("All Startups are dead! Your stock is now worthless");
        if(numOfGuesses <= 18 ){
            System.out.println("It only took you " + numOfGuesses + " guesses.");
            System.out.println("You got out before your options sank.");
        }else {
            System.out.println("Took long enough. "  + numOfGuesses + " guesses");
            System.out.println("Fish are dancing with your options");
        }
    } // close method

    public static void main(String[] args) {
        StartupBust game = new StartupBust(); // create the game object
        game.setUpGame(); // tell the game object to set up the game
        game.startPlaying(); // tell the game object to start the main game play loop (keeps asking for user input & checking the guess)
    }
}
